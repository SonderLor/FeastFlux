# Generated by Django 5.2 on 2025-05-03 20:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("restaurants", "0001_initial"),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="user",
            options={
                "permissions": [
                    ("can_manage_users", "Может управлять пользователями"),
                    ("can_view_reports", "Может просматривать отчеты"),
                    ("can_manage_menu", "Может управлять меню"),
                    ("can_process_payments", "Может проводить оплату"),
                    ("view_public_tables", "Может просматривать столики публично"),
                    ("view_own_orders", "Может просматривать свои заказы"),
                    ("view_own_profile", "Может просматривать свой профиль"),
                    ("view_own_cart", "Может просматривать свою корзину"),
                    ("add_customer_order", "Может создавать клиентские заказы"),
                    ("checkout_order", "Может оформлять заказы"),
                ],
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="email_verified",
            field=models.BooleanField(default=False, verbose_name="Email подтвержден"),
        ),
        migrations.AddField(
            model_name="user",
            name="external_id",
            field=models.CharField(
                blank=True, max_length=100, null=True, verbose_name="Внешний ID"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="restaurant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="restaurants.restaurant",
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="favorite_dishes",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Список ID любимых блюд",
                null=True,
                verbose_name="Любимые блюда",
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="loyalty_points",
            field=models.PositiveIntegerField(default=0, verbose_name="Баллы лояльности"),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="notification_preferences",
            field=models.JSONField(
                blank=True, default=dict, null=True, verbose_name="Настройки уведомлений"
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="saved_delivery_addresses",
            field=models.JSONField(
                blank=True, default=list, null=True, verbose_name="Сохраненные адреса доставки"
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="taste_profile",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Данные о предпочтениях для рекомендаций",
                null=True,
                verbose_name="Профиль вкусов",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="role",
            field=models.CharField(
                choices=[
                    ("ADMIN", "Администратор"),
                    ("MANAGER", "Менеджер"),
                    ("WAITER", "Официант"),
                    ("KITCHEN", "Повар/Кухня"),
                    ("BARTENDER", "Бармен"),
                    ("CUSTOMER", "Клиент"),
                ],
                default="CUSTOMER",
                max_length=20,
                verbose_name="Роль в системе",
            ),
        ),
        migrations.CreateModel(
            name="VerificationToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("token", models.CharField(max_length=100, unique=True, verbose_name="Токен")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Дата истечения")),
                (
                    "token_type",
                    models.CharField(
                        choices=[
                            ("EMAIL_VERIFICATION", "Верификация Email"),
                            ("PASSWORD_RESET", "Сброс пароля"),
                        ],
                        max_length=20,
                        verbose_name="Тип токена",
                    ),
                ),
                ("is_used", models.BooleanField(default=False, verbose_name="Использован")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verification_tokens",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Токен верификации",
                "verbose_name_plural": "Токены верификации",
                "indexes": [
                    models.Index(fields=["token"], name="users_verif_token_7aaf41_idx"),
                    models.Index(
                        fields=["user", "token_type"], name="users_verif_user_id_e06af9_idx"
                    ),
                ],
            },
        ),
    ]
