# Generated by Django 5.2 on 2025-05-01 19:43

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("orders", "0001_initial"),
        ("restaurants", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="KitchenOrder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NEW", "Новый"),
                            ("IN_PROGRESS", "Готовится"),
                            ("COMPLETED", "Готов"),
                            ("DELAYED", "Задержан"),
                            ("CANCELLED", "Отменен"),
                        ],
                        default="NEW",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Низкий"),
                            ("NORMAL", "Обычный"),
                            ("HIGH", "Высокий"),
                            ("URGENT", "Срочно"),
                        ],
                        default="NORMAL",
                        max_length=10,
                        verbose_name="Приоритет",
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True, verbose_name="Примечания кухни")),
                (
                    "estimated_completion_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Расчетное время готовности"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Создан в")),
                ("started_at", models.DateTimeField(blank=True, null=True, verbose_name="Начат в")),
                (
                    "completed_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Готов в"),
                ),
                (
                    "notification_sent",
                    models.BooleanField(default=False, verbose_name="Уведомление отправлено"),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_kitchen_orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Назначен",
                    ),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kitchen_order",
                        to="orders.order",
                        verbose_name="Заказ",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ на кухне",
                "verbose_name_plural": "Заказы на кухне",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="KitchenOrderItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Ожидает"),
                            ("PREPARING", "Готовится"),
                            ("READY", "Готов"),
                            ("SERVED", "Подан"),
                            ("CANCELLED", "Отменен"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "cooking_station",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Кухонная станция"
                    ),
                ),
                (
                    "preparation_notes",
                    models.TextField(
                        blank=True, null=True, verbose_name="Примечания по приготовлению"
                    ),
                ),
                (
                    "estimated_cooking_time",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Расчетное время приготовления (мин)"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Начато в"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Готово в"),
                ),
                (
                    "sequence_number",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Порядок приготовления блюд",
                        verbose_name="Порядковый номер",
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_kitchen_items",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Назначен",
                    ),
                ),
                (
                    "kitchen_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kitchen_items",
                        to="kitchen.kitchenorder",
                        verbose_name="Заказ на кухне",
                    ),
                ),
                (
                    "order_item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kitchen_item",
                        to="orders.orderitem",
                        verbose_name="Позиция заказа",
                    ),
                ),
            ],
            options={
                "verbose_name": "Позиция на кухне",
                "verbose_name_plural": "Позиции на кухне",
                "ordering": ["kitchen_order", "sequence_number"],
            },
        ),
        migrations.CreateModel(
            name="KitchenEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("ORDER_RECEIVED", "Заказ получен"),
                            ("ORDER_STARTED", "Начато приготовление"),
                            ("ORDER_COMPLETED", "Заказ готов"),
                            ("ORDER_DELAYED", "Заказ задержан"),
                            ("ORDER_CANCELLED", "Заказ отменен"),
                            ("ITEM_STARTED", "Блюдо начато"),
                            ("ITEM_COMPLETED", "Блюдо готово"),
                            ("STAFF_ASSIGNED", "Назначен сотрудник"),
                            ("QUEUE_STATUS_CHANGED", "Статус очереди изменен"),
                            ("NOTE_ADDED", "Добавлено примечание"),
                            ("OTHER", "Другое"),
                        ],
                        max_length=30,
                        verbose_name="Тип события",
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(blank=True, null=True, verbose_name="IP-адрес"),
                ),
                ("user_agent", models.TextField(blank=True, null=True, verbose_name="User Agent")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="kitchen_events",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Кто создал",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kitchen_events",
                        to="restaurants.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
                (
                    "kitchen_order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="kitchen.kitchenorder",
                        verbose_name="Заказ на кухне",
                    ),
                ),
                (
                    "kitchen_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="kitchen.kitchenorderitem",
                        verbose_name="Позиция на кухне",
                    ),
                ),
            ],
            options={
                "verbose_name": "Событие на кухне",
                "verbose_name_plural": "События на кухне",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="KitchenQueue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название очереди")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OPEN", "Открыта"),
                            ("CLOSED", "Закрыта"),
                            ("PAUSED", "Приостановлена"),
                        ],
                        default="OPEN",
                        max_length=10,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, verbose_name="Порядок отображения"),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Очередь по умолчанию"),
                ),
                ("description", models.TextField(blank=True, null=True, verbose_name="Описание")),
                (
                    "responsible_roles",
                    models.JSONField(
                        default=list,
                        help_text="JSON-массив с ролями сотрудников, ответственных за эту очередь",
                        verbose_name="Ответственные роли",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата обновления")),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kitchen_queues",
                        to="restaurants.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Очередь кухни",
                "verbose_name_plural": "Очереди кухни",
                "ordering": ["restaurant", "order", "name"],
            },
        ),
        migrations.AddField(
            model_name="kitchenorder",
            name="queue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="kitchen_orders",
                to="kitchen.kitchenqueue",
                verbose_name="Очередь",
            ),
        ),
        migrations.CreateModel(
            name="CookingStation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название станции")),
                ("description", models.TextField(blank=True, null=True, verbose_name="Описание")),
                ("is_active", models.BooleanField(default=True, verbose_name="Активна")),
                (
                    "responsible_roles",
                    models.JSONField(
                        default=list,
                        help_text="JSON-массив с ролями сотрудников, ответственных за эту станцию",
                        verbose_name="Ответственные роли",
                    ),
                ),
                (
                    "average_prep_time",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Среднее время приготовления (мин)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата обновления")),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cooking_stations",
                        to="restaurants.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
                (
                    "queue",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stations",
                        to="kitchen.kitchenqueue",
                        verbose_name="Очередь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Кухонная станция",
                "verbose_name_plural": "Кухонные станции",
                "ordering": ["restaurant", "name"],
            },
        ),
        migrations.AddIndex(
            model_name="kitchenorderitem",
            index=models.Index(fields=["status"], name="kitchen_kit_status_549b51_idx"),
        ),
        migrations.AddIndex(
            model_name="kitchenorderitem",
            index=models.Index(
                fields=["kitchen_order", "status"], name="kitchen_kit_kitchen_fd4593_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="kitchenorderitem",
            index=models.Index(fields=["assigned_to"], name="kitchen_kit_assigne_560b58_idx"),
        ),
        migrations.AddIndex(
            model_name="kitchenevent",
            index=models.Index(
                fields=["restaurant", "created_at"], name="kitchen_kit_restaur_e3cb36_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="kitchenevent",
            index=models.Index(
                fields=["kitchen_order", "event_type"], name="kitchen_kit_kitchen_44c624_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="kitchenevent",
            index=models.Index(
                fields=["kitchen_item", "event_type"], name="kitchen_kit_kitchen_c0af73_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="kitchenqueue",
            unique_together={("restaurant", "name")},
        ),
        migrations.AddIndex(
            model_name="kitchenorder",
            index=models.Index(fields=["status", "priority"], name="kitchen_kit_status_ece96a_idx"),
        ),
        migrations.AddIndex(
            model_name="kitchenorder",
            index=models.Index(fields=["queue", "status"], name="kitchen_kit_queue_i_150fc3_idx"),
        ),
        migrations.AddIndex(
            model_name="kitchenorder",
            index=models.Index(fields=["assigned_to"], name="kitchen_kit_assigne_9d76c5_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="cookingstation",
            unique_together={("restaurant", "name")},
        ),
    ]
