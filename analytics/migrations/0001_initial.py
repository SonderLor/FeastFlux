# Generated by Django 5.2 on 2025-05-01 19:37

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("menu", "0001_initial"),
        ("restaurants", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomerSegment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название сегмента")),
                ("description", models.TextField(blank=True, null=True, verbose_name="Описание")),
                (
                    "dietary_preferences",
                    models.JSONField(
                        default=dict,
                        help_text="JSON с данными о диетических предпочтениях сегмента",
                        verbose_name="Диетические предпочтения",
                    ),
                ),
                (
                    "avg_order_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Средний чек",
                    ),
                ),
                (
                    "visit_frequency",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        verbose_name="Частота посещений (в месяц)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата обновления")),
                (
                    "churn_risk",
                    models.FloatField(
                        default=0.0,
                        help_text="Вероятность оттока клиентов этого сегмента (0-1)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="Риск оттока",
                    ),
                ),
                (
                    "loyalty_index",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Оценка лояльности сегмента от 0 до 100",
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name="Индекс лояльности",
                    ),
                ),
                (
                    "preferred_categories",
                    models.ManyToManyField(
                        blank=True,
                        related_name="customer_segments",
                        to="menu.category",
                        verbose_name="Предпочитаемые категории",
                    ),
                ),
                (
                    "preferred_items",
                    models.ManyToManyField(
                        blank=True,
                        related_name="customer_segments",
                        to="menu.menuitem",
                        verbose_name="Предпочитаемые блюда",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_segments",
                        to="restaurants.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Сегмент клиентов",
                "verbose_name_plural": "Сегменты клиентов",
                "ordering": ["-loyalty_index", "name"],
            },
        ),
        migrations.CreateModel(
            name="CustomerInsight",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                (
                    "first_visit_date",
                    models.DateTimeField(blank=True, null=True, verbose_name="Дата первого визита"),
                ),
                (
                    "last_visit_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата последнего визита"
                    ),
                ),
                (
                    "total_visits",
                    models.PositiveIntegerField(default=0, verbose_name="Всего визитов"),
                ),
                (
                    "total_spend",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Всего потрачено",
                    ),
                ),
                (
                    "avg_order_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Средний чек",
                    ),
                ),
                (
                    "favorite_items",
                    models.JSONField(
                        default=list,
                        help_text="JSON-массив с ID и количеством заказов наиболее часто заказываемых блюд",
                        verbose_name="Любимые блюда",
                    ),
                ),
                (
                    "dietary_preferences",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Диетические предпочтения"
                    ),
                ),
                ("allergens", models.JSONField(blank=True, null=True, verbose_name="Аллергены")),
                (
                    "feedback_rating_avg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        verbose_name="Средняя оценка",
                    ),
                ),
                (
                    "purchase_patterns",
                    models.JSONField(
                        default=dict,
                        help_text="JSON с данными о предпочтительных днях/часах посещения",
                        verbose_name="Шаблоны покупок",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата обновления")),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_insight",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Клиент",
                    ),
                ),
                (
                    "segment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="customers",
                        to="analytics.customersegment",
                        verbose_name="Сегмент",
                    ),
                ),
            ],
            options={
                "verbose_name": "Аналитика по клиенту",
                "verbose_name_plural": "Аналитика по клиентам",
                "ordering": ["-total_spend"],
            },
        ),
        migrations.CreateModel(
            name="DailySales",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                ("date", models.DateField(verbose_name="Дата")),
                (
                    "total_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Всего заказов"),
                ),
                (
                    "completed_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Выполненные заказы"),
                ),
                (
                    "cancelled_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Отмененные заказы"),
                ),
                (
                    "gross_sales",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Валовые продажи",
                    ),
                ),
                (
                    "net_sales",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Чистые продажи",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Сумма скидок",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Сумма налогов",
                    ),
                ),
                (
                    "average_order_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Средний чек",
                    ),
                ),
                (
                    "peak_hour_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Пиковый час (заказы)"),
                ),
                (
                    "peak_hour_sales",
                    models.PositiveIntegerField(default=0, verbose_name="Пиковый час (продажи)"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата обновления")),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_sales",
                        to="restaurants.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ежедневные продажи",
                "verbose_name_plural": "Ежедневные продажи",
                "ordering": ["-date", "restaurant"],
            },
        ),
        migrations.CreateModel(
            name="NutritionalAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                ("date_period", models.CharField(max_length=7, verbose_name="Период (год-месяц)")),
                (
                    "total_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Всего заказов"),
                ),
                (
                    "avg_calories_per_order",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Среднее кол-во калорий на заказ",
                    ),
                ),
                (
                    "avg_protein_per_order",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Среднее кол-во белков на заказ",
                    ),
                ),
                (
                    "avg_fat_per_order",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Среднее кол-во жиров на заказ",
                    ),
                ),
                (
                    "avg_carbs_per_order",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Среднее кол-во углеводов на заказ",
                    ),
                ),
                (
                    "vegetarian_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Вегетарианские заказы"),
                ),
                (
                    "vegan_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Веганские заказы"),
                ),
                (
                    "gluten_free_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Безглютеновые заказы"),
                ),
                (
                    "lactose_free_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Безлактозные заказы"),
                ),
                (
                    "common_allergens",
                    models.JSONField(
                        default=dict,
                        help_text="JSON с данными о частоте аллергенов в заказах",
                        verbose_name="Распространенные аллергены",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата обновления")),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nutritional_analytics",
                        to="restaurants.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Анализ пищевой ценности",
                "verbose_name_plural": "Анализ пищевой ценности",
                "ordering": ["-date_period", "restaurant"],
            },
        ),
        migrations.CreateModel(
            name="PopularItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                ("date_period", models.CharField(max_length=7, verbose_name="Период (год-месяц)")),
                (
                    "total_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Количество заказов"),
                ),
                (
                    "total_quantity",
                    models.PositiveIntegerField(default=0, verbose_name="Общее количество порций"),
                ),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Общая выручка",
                    ),
                ),
                (
                    "average_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        verbose_name="Средняя оценка",
                    ),
                ),
                (
                    "last_ordered",
                    models.DateTimeField(blank=True, null=True, verbose_name="Последний заказ"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата обновления")),
                (
                    "menu_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="popularity_stats",
                        to="menu.menuitem",
                        verbose_name="Позиция меню",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="popular_items",
                        to="restaurants.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Популярное блюдо",
                "verbose_name_plural": "Популярные блюда",
                "ordering": ["-total_orders", "menu_item__name"],
            },
        ),
        migrations.CreateModel(
            name="StaffPerformance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                ("date_period", models.CharField(max_length=7, verbose_name="Период (год-месяц)")),
                (
                    "total_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Всего заказов"),
                ),
                (
                    "completed_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Выполненные заказы"),
                ),
                (
                    "cancelled_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Отмененные заказы"),
                ),
                (
                    "total_sales",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Общие продажи",
                    ),
                ),
                (
                    "average_order_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Средний чек",
                    ),
                ),
                (
                    "items_prepared",
                    models.PositiveIntegerField(default=0, verbose_name="Приготовлено блюд"),
                ),
                (
                    "average_preparation_time",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Среднее время приготовления (мин)"
                    ),
                ),
                (
                    "hours_worked",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=8,
                        verbose_name="Отработанные часы",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата обновления")),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff_performance",
                        to="restaurants.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
                (
                    "staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_records",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Сотрудник",
                    ),
                ),
            ],
            options={
                "verbose_name": "Эффективность сотрудника",
                "verbose_name_plural": "Эффективность сотрудников",
                "ordering": ["-date_period", "restaurant", "staff__last_name"],
            },
        ),
        migrations.CreateModel(
            name="TableOccupancy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный идентификатор",
                    ),
                ),
                ("date", models.DateField(verbose_name="Дата")),
                (
                    "total_orders",
                    models.PositiveIntegerField(default=0, verbose_name="Всего заказов"),
                ),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Общая выручка",
                    ),
                ),
                (
                    "total_guests",
                    models.PositiveIntegerField(default=0, verbose_name="Всего гостей"),
                ),
                (
                    "usage_minutes",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Время использования (мин)"
                    ),
                ),
                (
                    "peak_usage_hour",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Пиковый час использования"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Дата обновления")),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="table_occupancy",
                        to="restaurants.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
                (
                    "table",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="occupancy_records",
                        to="restaurants.table",
                        verbose_name="Столик",
                    ),
                ),
            ],
            options={
                "verbose_name": "Занятость столика",
                "verbose_name_plural": "Занятость столиков",
                "ordering": ["-date", "restaurant", "table__number"],
            },
        ),
        migrations.AddIndex(
            model_name="customersegment",
            index=models.Index(
                fields=["restaurant", "loyalty_index"], name="analytics_c_restaur_ef945a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dailysales",
            index=models.Index(fields=["date"], name="analytics_d_date_e67976_idx"),
        ),
        migrations.AddIndex(
            model_name="dailysales",
            index=models.Index(
                fields=["restaurant", "date"], name="analytics_d_restaur_7e46a0_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="dailysales",
            unique_together={("restaurant", "date")},
        ),
        migrations.AddIndex(
            model_name="nutritionalanalytics",
            index=models.Index(
                fields=["restaurant", "date_period"], name="analytics_n_restaur_6179bb_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="nutritionalanalytics",
            unique_together={("restaurant", "date_period")},
        ),
        migrations.AddIndex(
            model_name="popularitem",
            index=models.Index(
                fields=["restaurant", "date_period"], name="analytics_p_restaur_bb310b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="popularitem",
            index=models.Index(
                fields=["menu_item", "date_period"], name="analytics_p_menu_it_85f7b5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="popularitem",
            unique_together={("restaurant", "menu_item", "date_period")},
        ),
        migrations.AddIndex(
            model_name="staffperformance",
            index=models.Index(
                fields=["restaurant", "date_period"], name="analytics_s_restaur_4f4210_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="staffperformance",
            index=models.Index(
                fields=["staff", "date_period"], name="analytics_s_staff_i_5531ad_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="staffperformance",
            unique_together={("restaurant", "staff", "date_period")},
        ),
        migrations.AddIndex(
            model_name="tableoccupancy",
            index=models.Index(
                fields=["restaurant", "date"], name="analytics_t_restaur_95912b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tableoccupancy",
            index=models.Index(fields=["table", "date"], name="analytics_t_table_i_1c40ae_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="tableoccupancy",
            unique_together={("restaurant", "table", "date")},
        ),
    ]
